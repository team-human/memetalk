// Search available plugins at https://plugins.gradle.org/.
plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
    id "com.diffplug.spotless" version "5.0.0"
    id "io.freefair.lombok" version "5.1.0"
    id "io.github.kobylynskyi.graphql.codegen" version "3.1.1"
}

compileJava {
    sourceCompatibility = '11'
    targetCompatibility = '11'
}

repositories {
    jcenter()
}

test {
    // listens to events in the test execution lifecycle
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    // listen to standard out and standard error of the test JVM(s)
    onOutput { descriptor, event ->
        logger.lifecycle(event.message)
    }
}

configurations.all {
    exclude module: 'slf4j-log4j12'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'com.google.guava:guava:29.0-jre'

    // postgresql
    compile group: 'org.postgresql', name: 'postgresql', version: '42.1.4'

    // graphql
    implementation 'com.graphql-java:graphql-java:11.0'
    implementation 'com.graphql-java:graphql-java-spring-boot-starter-webmvc:1.0'

    // test
    testImplementation 'junit:junit:4.13'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompile group: 'com.h2database', name: 'h2', version: '1.3.148'
}

application {
    mainClassName = 'memetalk.Server'
}

spotless {
    java {
        // Exclude autogenerated code. The path should matches to the settings
        // in `graphqlCodeGgen` - the path depends on outputDir and packageName.
        targetExclude("build/generated/memetalk/codegen/*.java")

        importOrder()
        removeUnusedImports()

        // Apply a specific flavor of google-java-format
        googleJavaFormat('1.8').aosp()
    }
}

// Setup graphql codegen.
compileJava.dependsOn 'graphqlCodegen'
graphqlCodegen {
    // Doc: https://github.com/kobylynskyi/graphql-java-codegen/blob/master/docs/codegen-options.md
    graphqlSchemas.includePattern = "schema.graphql"
    outputDir = new File("$buildDir/generated")
    packageName = "memetalk.codegen"
}
sourceSets.main.java.srcDir "$buildDir/generated"
