type User {
  # a unique identifier, and currently the DB primary key
  id: ID!

  # username is used for login
  username: String!
  name: String!

  # The current role is ADMIN or USER. ADMIN role has a super power to delete
  # any Meme, update password, remove a user account, and so on. USER role can only delete
  # his/her Meme, update his/her passowrd.
  roles: [String]
}

type LoginUser {
  user: User!
  token: String!
}

type Meme {
  id: ID!
  author: User!
  tags: [String!]
  url: String!
  createTime: String!
  # NOTE: This field is unsupported. Don't query this field.
  counter: MemeCounter!
}

type MemeCounter {
  likeCount: Int!
  dislikeCount: Int!
  shareCount: Int!
  commentCount: Int!
}

type Query {
  # Gets the current user.
  currentUser: User
  
  # Gets popular tags.
  popularTags: [String!]
  
  # Gets memes of a tag.
  memesByTag(tag: String!): [Meme!]
  # Gets memes of a user.
  memesByAuthorId(userId: ID!): [Meme!]
}

scalar File
type Mutation {
  createMeme(file: File!, tags: [String!]): Meme
  createUser(userInfo: CreateUserInput!): LoginUser
  login(username: String!, password: String!): LoginUser
}

input CreateUserInput {
  username: String!
  password: String!
  name: String!
}


